openapi: '3.0.2'
info:
  title: User API
  version: '1.0'
servers:
  - url: http://localhost:9999

paths:
  /users:
    get:
      summary: Retrieve all users
      security:
        - bearerAuth: [] 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      security:
        - bearerAuth: [] 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Retrieve a user by ID
      security:
        - bearerAuth: [] 
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update a user by ID
      security:
        - bearerAuth: [] 
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '404':
          description: User not found
    delete:
      summary: Delete a user by ID
      security:
        - bearerAuth: [] 
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user to delete
          schema:
            type: string
      responses:
        '200':
          description: OK
        '404':
          description: User not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        age:
          type: string
      required:
        - name
        - email
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer